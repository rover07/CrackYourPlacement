class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
     //bruteforce O(n^2)
        int size=nums.size();
        for(int i=0;i<size;i++)
        {
            for(int j=i+1;j<size;j++)
            if(nums[i]+nums[j]==target)
            {
                return {i,j};
            }
        }
        return {};
    }
};


//         // Approach 2: 2ptr
//         // THIS DOESNT WORK AS OUR NEW SORTED ARRAY HAS DIFFERENT INDEXES
//    
//  sort(nums.begin(), nums.end()); 
//     int left=0;
//     int right=nums.size()-1;
//     while(left<right)
//     {   
//         int sum=(nums[left]+nums[right]);
//         if(sum==target)
//        {
//         return {left,right};
//        }
//        else if(sum<target)
//        {
//            left++;
//        }
//        else if(sum>target)
//        {
//            right--;
//        }
//     }
//     return {};
//     }
// };