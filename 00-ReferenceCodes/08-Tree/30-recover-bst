/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void solve(TreeNode* root, TreeNode* &p, TreeNode* &q, TreeNode* &prev) {
        if (!root) return;

        solve(root->left, p, q, prev);
        if (prev && root->val < prev->val) {
            if (!p) {
                p = prev;
            }
            q = root;
        }
        prev = root;
        solve(root->right, p, q, prev);
    }
    
    void recoverTree(TreeNode* root) {
        TreeNode* p = nullptr;
        TreeNode* q = nullptr;
        TreeNode* prev = nullptr;

        solve(root, p, q, prev);

        if (p && q) {
            swap(p->val, q->val);
        }
    }
};
