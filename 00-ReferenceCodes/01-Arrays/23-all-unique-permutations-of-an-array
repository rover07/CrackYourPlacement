class Solution {
public:
    void nextPermutation(vector<int>& nums) {
        int index = -1;
        for(int i = nums.size() - 1; i > 0; i--) {
            if(nums[i] > nums[i - 1]) {
                index = i - 1;
                break;
            }
        }

        if(index == -1) {
            reverse(nums.begin(), nums.end());
        } else {
            for(int i = nums.size() - 1; i > index; i--) {
                if(nums[i] > nums[index]) {
                    swap(nums[i], nums[index]);
                    break;
                }
            }
            reverse(nums.begin() + index + 1, nums.end());
        }
    }
    
    vector<vector<int>> uniquePerms(vector<int>& arr, int n) {
        // code here
        sort(arr.begin(), arr.end());
        vector<vector<int>> res;
        
        do {
            res.push_back(arr);
            nextPermutation(arr);
        } while(arr != res[0]);
        
        return res;
    }
};